## Tasks / Validation configuration
# Validation task save results in data.dir/validation-checker_data/tasks
data.dir=/usr/daobs/data

# The Solr server URL
solr.server.url=http://localhost:8080/daobs

# Solr server credentials
solr.server.user=admin
solr.server.password=admin


# Start the command line interface - The task will start when the route starts
task.validation-checker.startup.cli=true

# Start the task when a JMS message is sent to the queue
task.validation-checker.startup.jms=false

task.validation-checker.startup.background=false

# The task folder is polled at regular interval to index
# any validation report generated.
task.validation-checker.folder=${data.dir}/validation-checker_data/tasks

# Time in ms to poll for new associations to index.
task.validation-checker.delay=10000

# The search filter (ie. a Solr query).
# eg. all none validated records
# This filter is not relevant because the process will
# do paging over the set of records but the number of
# valid records will change over time.
#task.validation-checker.filter=+id:68BA7C03-9579-16C8-0D7E-6C2FDF327B0A
# It's better to validate a set of record with a filter
# which is not affected by the process itself
# eg. territory, documentType
#task.validation-checker.filter=id:0a01b844-d4e1-4f9c-b1a7-f7fc71b2ee5a
# eg. only one record
#task.validation-checker.filter=id:570896ed-0462-46e5-bc7b-eaae317c5038
# eg. only on territory
task.validation-checker.filter=+documentType:metadata -isValid:[* TO *]
#task.validation-checker.filter=+documentType:metadata -isValid:[* TO *]
#task.validation-checker.filter=+id:0C9FDDF2-3D8E-B525-536D-31FA134E3D09

# The field to return in the response
# * The document contains the XML document to validate against
# the validation engine (eg. XSD, Remote service)
# * The id is used to update the index with the results.
task.validation-checker.fields=document,id

# Number of records per page
task.validation-checker.records.per.page=200

# INSPIRE remote service validation
task.validation-checker.inspire.validator.url=http://inspire-geoportal.ec.europa.eu/GeoportalProxyWebServices/resources/INSPIREResourceTester?probeNetworkServices=false&probeDataResourceLocators=false
#task.validation-checker.inspire.validator.url=http://localhost/GeoportalProxyWebServices/resources/INSPIREResourceTester
task.validation-checker.inspire.probeNetworkServices=false
task.validation-checker.inspire.probeDataResourceLocators=false

# Threshold used to define a valid record
# when the completness indicator is above this
# value
task.validation-checker.inspire.threshold=75.0

# INSPIRE Validator. One of inspirePostgresValidator (postgressql INSPIRE validator) or inspireOnlineValidationClient (online INSPIRE validator).
task.validation-checker.validator=inspirePostgresValidator
# Postgres INSPIRE validator datasource url
task.validation-checker.inspire.postgres.datasource.url=jdbc:postgresql://10.24.193.134:5432/geocat-dump-brgm
# Postgres INSPIRE validator datasource driver class name
task.validation-checker.inspire.postgres.datasource.driverClassName=org.postgresql.Driver
# Postgres INSPIRE validator datasource username
task.validation-checker.inspire.postgres.datasource.username=postgres
# Postgres INSPIRE validator datasource password
task.validation-checker.inspire.postgres.datasource.password=postgres
# Postgres INSPIRE validator : Query to get the metadata INSPIRE validation result from a metadata uuid
task.validation-checker.inspire.postgres.sql.selectMetadataValidationResultQuery=select mdv_rule_result from geocat.md_validation_results mdvr, geocat.metadata md where md.uuid = ? and mdvr.mdv_md_id = md.id and mdvr.mdv_rule_title='INSPIRE'
# Postgres INSPIRE validator : INPSIRE valid result rule (do not put accents)
task.validation-checker.inspire.postgres.validRuleResult=Metadonnee conforme
